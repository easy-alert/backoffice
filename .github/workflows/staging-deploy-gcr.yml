name: Staging Deploy to Google Cloud Run

on:
  push:
    branches:
      - develop

env:
  PROJECT_ID: 'easy-alert-dev'
  SERVICE: 'backoffice-gh-sandbox'
  REGION: 'southamerica-east1'
  GAR_LOCATION: 'southamerica-east1'
  GAR_NAME: 'backoffice-sandbox'

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Configure Docker Authentication
        run: gcloud auth configure-docker "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      - name: Cache Docker Layers
        uses: actions/cache@v3
        with:
          path: /tmp/docker-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build and Push Docker Image
        run: |
          DOCKER_TAG="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"
          echo "Building Docker image with tag: ${DOCKER_TAG}"
          docker build \
            --build-arg VITE_API_URL=${{ vars.VITE_API_URL }} \
            --build-arg VITE_COMPANY_URL=${{ vars.VITE_COMPANY_URL }} \
            --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"

  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          image: '${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}'

      - name: Verify Deployment
        run: |
          echo "Verifying deployment..."
          SERVICE_URL=$(gcloud run services describe "${{ env.SERVICE }}" --region="${{ env.REGION }}" --format="value(status.url)")
          echo "Cloud Run Service URL: ${SERVICE_URL}"
          curl -f "${SERVICE_URL}" || (echo "Health check failed!" && exit 1)
