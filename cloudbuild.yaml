steps:
  # Etapa 1: Construir a imagem Docker
  - name: 'gcr.io/cloud-builders/docker'
    id: Build
    args:
      - 'build'
      - '-t'
      - '$_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '-f'
      - 'Dockerfile'
      - '--build-arg'
      - 'VITE_API_URL=$_VITE_API_URL'
      - '--build-arg'
      - 'VITE_COMPANY_URL=$_VITE_COMPANY_URL'
      - '.'

  # Etapa 2: Fazer push da imagem
  - name: 'gcr.io/cloud-builders/docker'
    id: Push
    args:
      - 'push'
      - '$_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'

  # Etapa 3: Implantar no Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    id: Deploy
    entrypoint: gcloud
    args:
      - 'run'
      - 'services'
      - 'update'
      - '$_SERVICE_NAME'
      - '--platform=managed'
      - '--region=$_DEPLOY_REGION'
      - '--image=$_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '--labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID'
      - '--ingress=internal-and-cloud-load-balancing'
      - '--concurrency=80'
      - '--timeout=300s'
      - '--cpu=1'
      - '--memory=1Gi'
      - '--min-instances=1'
      - '--max-instances=5'
      - '--set-env-vars=NODE_ENV=production'
      - '--quiet'

images:
  - '$_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'

options:
  substitutionOption: ALLOW_LOOSE
  logging: CLOUD_LOGGING_ONLY

tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - backoffice-production-southamerica
